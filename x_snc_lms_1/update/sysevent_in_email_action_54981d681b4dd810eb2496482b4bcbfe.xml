<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_in_email_action">
    <sysevent_in_email_action action="INSERT_OR_UPDATE">
        <action>record_action</action>
        <active>true</active>
        <assignment_operator/>
        <condition_script/>
        <description/>
        <event_name>email.read</event_name>
        <filter_condition/>
        <from/>
        <name>Approve Leave Request</name>
        <order>1</order>
        <reply_email/>
        <required_roles/>
        <script><![CDATA[(function runAction(/*GlideRecord*/ current, /*GlideRecord*/ event, /*EmailWrapper*/ email, /*ScopedEmailLogger*/ logger, /*EmailClassifier*/ classifier) {
	logger.info("Started Leave status update");
	var gc = new GlideRecord('x_snc_lms_1_applied_leaves');
	gc.addQuery('sys_id', current.sys_id);
	gc.query();
	var status = "";
	
	if (email.subject.indexOf("approve") >= 0)
		status = "approved";

	if (email.subject.indexOf("reject") >= 0)
		status = "rejected";
	
	if(gc.next()){
		gc.status = status;
		gc.approve_by = current.manager.sys_id;
		gc.update();
		logger.info("Started Leave status update Done");
	}else{
		logger.info("Started Leave status update- could not found record");
	}
	
	
})(current, event, email, logger, classifier);

// processLeaveApprovalEmail();

// function processLeaveApprovalEmail() {
// 	"use strict";
// 	var errorMsg = "";
// 	var msgArray = [];

// 	if (current.getTableName() != "sysapproval_approver")
// 		return;
// 	gs.log("AC2 started");
// 	var displayValue = getApprovalDisplayValue(current);

// 	if (!validUser()) {
// 		gs.log(getFailurePreamble() + "Sender email does not match approval assignee.");
// 		msgArray.push(displayValue);
// 		msgArray.push(current.approver.getDisplayValue());
// 		msgArray.push(current.approver.email);
// 		errorMsg = gs.getMessage("approvalInvalidUser", msgArray);
// 		createEmailEvent(errorMsg);
// 		return;
// 	}

// 	if (current.state == 'cancelled') {
// 		gs.log(getFailurePreamble() + "The approval has been canceled.");
// 		msgArray.push(displayValue);
// 		errorMsg = gs.getMessage("approvalCancelled", msgArray);
// 		createEmailEvent(errorMsg);
// 		return;
// 	}

	//Added for 'No Longer Required' approval state
// 	if (current.state == 'not_required') {
// 		gs.log(getFailurePreamble() + "The approval is no longer required.");
// 		msgArray.push(displayValue);
// 		errorMsg = gs.getMessage("approvalNotRequired", msgArray);
// 		createEmailEvent(errorMsg);
// 		return;
// 	}

// 	if (email.body.state != undefined)
// 		current.state = email.body.state;

// 	if (email.subject.indexOf("approve") >= 0)
// 		current.state = "approved";

// 	if (email.subject.indexOf("reject") >= 0)
// 		current.state = "rejected";
// 	gs.info("AC1 reached");
// 	if (current.state != "approved" && current.state != "rejected") {
// 		gs.log(getFailurePreamble() + "The subject is malformed. The approver probably did not click the approve or reject button on the email.");
// 		msgArray.push(displayValue);
// 		errorMsg = gs.getMessage("approvalFailed", msgArray);
// 		createEmailEvent(errorMsg);
// 		return;
// 	}
// 	gs.info("AC2 reached after");
// 	current.comments = "reply from: " + email.from + "\n\n" + email.body_text;
// 	var controller = new GlideController();
// 	controller.putGlobal("approvalSource", "email");
// 	current.update();
// 	controller.removeGlobal("approvalSource");

// 	function validUser() {
// 		gs.info("AC Test1 email " + email.from_sys_id + " " + current.approver);
// 		if (current.approver == email.from_sys_id)
// 			return true;

		// check if the email is from a delegate of the approver
// 		var g = new GlideRecord("sys_user_delegate");
// 		g.addQuery("user", current.approver.toString());
// 		g.addQuery("delegate", email.from_sys_id);
// 		g.addQuery("approvals", "true");
// 		g.addQuery("starts", "<=", gs.daysAgo(0));
// 		g.addQuery("ends", ">=", gs.daysAgo(0));
// 		g.query();
// 		return g.hasNext();
// 	}

// 	function createEmailEvent(msg) {
// 		gs.eventQueue("approval.email.errorMsg", current, email.from, msg);
// 	}

// 	function getFailurePreamble() {
// 		return 'Approval email from ' + email.from + ' for task "' + displayValue + '" assigned to "' + current.approver.getDisplayValue()
// 				+ '" failed because: ';
// 	}

// 	function getApprovalDisplayValue(approval) {
// 		if (!gs.nil(approval.sysapproval))
// 			return approval.getDisplayValue();
// 		else {
// 			var target = new GlideRecord(approval.source_table);
// 			if (target.get(approval.document_id))
// 				return target.getDisplayValue();
// 		}
// 		gs.warn("Target for sysapproval_approver:" + approval.getUniqueValue() + " not found. Target=" + approval.source_table + ":" + approval.document_id);
// 		return "Unknown";
// 	}

// }]]></script>
        <stop_processing>false</stop_processing>
        <sys_class_name>sysevent_in_email_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-05-24 20:02:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>54981d681b4dd810eb2496482b4bcbfe</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>Approve Leave Request</sys_name>
        <sys_overrides/>
        <sys_package display_value="LMS" source="x_snc_lms_1">1d40378c1b41d810eb2496482b4bcb0b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS">1d40378c1b41d810eb2496482b4bcb0b</sys_scope>
        <sys_update_name>sysevent_in_email_action_54981d681b4dd810eb2496482b4bcbfe</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-26 11:35:25</sys_updated_on>
        <table>x_snc_lms_1_applied_leaves</table>
        <template/>
        <type>reply</type>
    </sysevent_in_email_action>
</record_update>
